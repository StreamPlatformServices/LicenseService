// <auto-generated />
using System;
using LicenseService.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LicenseService.Migrations
{
    [DbContext(typeof(LicenseDatabaseContext))]
    [Migration("20240718083703_ContentId_UserId_UniqueContraint")]
    partial class ContentId_UserId_UniqueContraint
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("LicenseService.Persistance.Data.LicenseData", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ContentId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaxPlayCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MaxPlaybackDuration")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.HasIndex("ContentId", "UserId")
                        .IsUnique();

                    b.ToTable("Licenses");
                });
#pragma warning restore 612, 618
        }
    }
}
